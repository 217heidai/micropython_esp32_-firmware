name: ESP32-S3-N16R8 LVGL Firmware

on:
  workflow_dispatch:

env:
  LVGL: lv_micropython
  LVGL_REPO: https://github.com/lvgl/lv_micropython.git
  LVGL_VERSION: v9.1.0
  LVGLFIX: lv_micropython_fix
  ESPIDF: esp-idf
  ESPIDF_REPO: https://github.com/espressif/esp-idf.git
  ESPIDF_VERSION: v4.4.8
  TZ: Asia/Shanghai

jobs:
  ESP32-S3-N16R8_LVGL:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Initialization environment
        run: |
          sudo apt-get update -y
          sudo apt-get install -y build-essential libffi-dev git pkg-config
          sudo apt-get install -y git wget flex bison gperf python3 python3-venv cmake ninja-build ccache libffi-dev libssl-dev dfu-util libusb-1.0-0 python-is-python3 pip
          sudo timedatectl set-timezone "$TZ"

      - name: Clone ESP-IDF
        run: |
          git clone -b $ESPIDF_VERSION --recursive $ESPIDF_REPO $ESPIDF
          cd $ESPIDF
          git checkout $ESPIDF_VERSION
          git submodule update --init --recursive
          ./install.sh
          source export.sh

      - name: Clone LVGL
        run: |
          git clone $LVGL_REPO $LVGL
          cd $LVGL
          git submodule update --init --recursive

      - name: Custom LVGL for ESP32
        run: |
          rm -rf $LVGL/lib/lv_bindings/driver/esp32/espidf.h
          mv $LVGLFIX/lib/lv_bindings/driver/esp32/espidf.h $LVGL/lib/lv_bindings/driver/esp32/
          rm -rf $LVGL/lib/lv_bindings/driver/esp32/modrtch.c
          mv $LVGLFIX/lib/lv_bindings/driver/esp32/modrtch.c $LVGL/lib/lv_bindings/driver/esp32/
          rm -rf $LVGL/lib/lv_bindings/mkrules.cmake
          mv $LVGLFIX/lib/lv_bindings/mkrules.cmake $LVGL/lib/lv_bindings/
          rm -rf $LVGL/ports/esp32/network_common.c
          mv $LVGLFIX/ports/esp32/network_common.c $LVGL/ports/esp32/
          rm -rf $LVGL/ports/esp32/boards/GENERIC_S3_SPIRAM_OCT/sdkconfig.board
          mv ESP32-S3-N16R8/lvgl.board $LVGL/ports/esp32/boards/GENERIC_S3_SPIRAM_OCT/sdkconfig.board

      - name: Compile the firmware
        id: compile
        run: |
          source $ESPIDF/export.sh
          cd $LVGL
          make -C mpy-cross
          make -C ports/esp32 LV_CFLAGS="-DLV_COLOR_DEPTH=16" BOARD=GENERIC_S3_SPIRAM_OCT
          echo "status=success" >> $GITHUB_OUTPUT
          echo "COMPILE_DATE=$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

      - name: Organize compiled firmware
        if: steps.compile.outputs.status == 'success' && !cancelled()
        run: |
          cd $LVGL/ports/esp32/build-GENERIC_S3_SPIRAM_OCT
          mv firmware.bin LVGL-${{ env.LVGL_VERSION }}_ESP32-S3-N16R8_${{ env.COMPILE_DATE }}.bin

      - name: Upload firmware to release
        if: steps.compile.outputs.status == 'success' && !cancelled()
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.LVGL }}/ports/esp32/build-GENERIC_S3_SPIRAM_OCT/LVGL-${{ env.LVGL_VERSION }}_ESP32-S3-N16R8_${{ env.COMPILE_DATE }}.bin
          asset_name: LVGL-${{ env.LVGL_VERSION }}_ESP32-S3-N16R8_${{ env.COMPILE_DATE }}.bin
          tag: LVGL-${{ env.LVGL_VERSION }}
          body: |
            ### LV_MicroPython Firmware For ESP32
          overwrite: true

      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@main
        with:
          retain_days: 0
          keep_minimum_runs: 4
